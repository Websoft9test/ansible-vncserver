# install VNCSERVER by OS_family
- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"

# configure VNCSERVER
## set environment variable
- block:
  - name: Copy jdk_env to /etc/profile.d
    template:
      src: vncserver_env.sh
      dest: '/etc/profile.d'
      mode: 0640
      
- block:     
  - name: Export ORACLE_HOME environment variable for this shell
    shell: |
      export ORACLE_BASE=/opt/oracle 
      export ORACLE_HOME=/opt/oracle/product/18c/dbhomeXE
      export ORACLE_SID=XE
      export PATH=$PATH:$ORACLE_HOME/bin

- name: Create vncserver User
  user:
    name: vncserver
    shell: /usr/sbin/nologin
    home: /data/wwwroot/vncserver
    create_home: no

- name: Create vncserver directory
  file:
    path: /data/wwwroot/vncserver
    state: directory
    owner: vncserver
    group: vncserver
    
- name: Download vncserver
  get_url:
    dest: /data/wwwroot/vncserver
    url: "{{vncserver_download_url}}"
    owner: vncserver
    group: vncserver

- name: Set vncserver config
  template:
    src: vncserver.conf.jinja2
    dest: /data/wwwroot/vncserver/vncserver.conf
    owner: vncserver
    group: vncserver

- name: Setting vncserver service
  copy:
    src: vncserver.service
    dest: /lib/systemd/system/vncserver.service

- name: Restart vncserver
  service:
    name: vncserver.service
    state: restarted
    enabled: yes

- name: Create vncserver System User
  user:
      name: vncserver 
      create_home: no 
      home: /opt/vncserver
      shell: /usr/sbin/nologin

- name: Download vncserver
  unarchive:
      src: "{{vncserver_download_url}}"
      dest: /opt/ 
      group: vncserver 
      remote_src: yes
      owner: vncserver
      mode: g+w

- name: Create the storage directory for files.
  file:
      path: /opt/vncserver/data
      state: directory 
      owner: vncserver 
      group: vncserver
      mode: g+w
      
- name: Set database connection /opt/vncserver/config/config.json
  lineinfile:
    dest: /opt/vncserver/config/config.json
    regexp: '"DataSource":'
    line: '    "DataSource": "{{vncserver_db_user}}:{{vncserver_db_password}}@tcp(localhost:3306)/{{vncserver_db_name}}?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s",'
    backrefs: yes 

# set soft link, -f enforce the exist links
# ln -sf src des
- name: set soft link
  shell: |
    ln -sf /opt/vncserver  /data/wwwroot
    ln -sf /opt/vncserver/config /data/config

# Check version,
# must use sudo sh -c to solve the no-root permission
- block:
  - name: Check VNCSERVER Version
    shell: sudo sh -c "vncserverctl status | grep 'VNCSERVER version' 1>> /data/logs/install_version.txt"

  - name: Check Erlang Version
    shell: sudo sh -c 'echo "Erlang $(yum info erlang | grep Version | sed -n 1p)" 1>> /data/logs/install_version.txt'
    when: ansible_os_family=="RedHat"

# check service state
- name: Check VNCSERVER Service
  shell: systemctl status vncserver | grep Active*
  register: check_vncserver_service
  notify: check_vncserver_service
